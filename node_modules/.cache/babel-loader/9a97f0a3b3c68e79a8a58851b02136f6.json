{"ast":null,"code":"var _jsxFileName = \"/home/wasif/Documents/Office/mask_vending_machine/src/components/MaskInventory/index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport { DonutChart } from \"../DonutChart/DonutChart\";\nimport { Collapse } from \"react-bootstrap\";\nimport \"./style.css\";\nexport default function MaskInventory({\n  data\n}) {\n  const [emptystate, setemptystate] = useState(false);\n  const [warningstate, setwarningstate] = useState(false);\n  const [filledstate, setfilledstate] = useState(false);\n  const [emptyData, useEmptyData] = useState([]);\n  const [warningData, useWarningData] = useState([]);\n  const [filledData, useFilledData] = useState([]);\n\n  const ManagingData = data => {\n    const emptyDataTemp = [];\n    const warningDataTemp = [];\n    const filledDataTemp = [];\n\n    for (let i = 0; i < (data === null || data === void 0 ? void 0 : data.length); i++) {\n      var _data$i, _data$i4;\n\n      if (((_data$i = data[i]) === null || _data$i === void 0 ? void 0 : _data$i.availableMasks.split(\"/\")[0]) < 10) {\n        var _data$i2, _data$i3;\n\n        emptyDataTemp.push({\n          price: (_data$i2 = data[i]) === null || _data$i2 === void 0 ? void 0 : _data$i2.id,\n          availableMasks: (_data$i3 = data[i]) === null || _data$i3 === void 0 ? void 0 : _data$i3.availableMasks.split(\"/\")[0]\n        });\n      } else if (((_data$i4 = data[i]) === null || _data$i4 === void 0 ? void 0 : _data$i4.availableMasks.split(\"/\")[0]) < 100) {\n        var _data$i5, _data$i6;\n\n        warningDataTemp.push({\n          price: (_data$i5 = data[i]) === null || _data$i5 === void 0 ? void 0 : _data$i5.id,\n          availableMasks: (_data$i6 = data[i]) === null || _data$i6 === void 0 ? void 0 : _data$i6.availableMasks.split(\"/\")[0]\n        });\n      } else {\n        var _data$i7, _data$i7$masqomats, _data$i8;\n\n        filledDataTemp.push({\n          price: (_data$i7 = data[i]) === null || _data$i7 === void 0 ? void 0 : (_data$i7$masqomats = _data$i7.masqomats) === null || _data$i7$masqomats === void 0 ? void 0 : _data$i7$masqomats.id,\n          availableMasks: (_data$i8 = data[i]) === null || _data$i8 === void 0 ? void 0 : _data$i8.availableMasks.split(\"/\")[0]\n        });\n      }\n    }\n\n    useEmptyData(emptyDataTemp);\n    useWarningData(warningDataTemp);\n    useFilledData(filledDataTemp);\n  };\n\n  useEffect(() => {\n    ManagingData(data);\n  }, [data]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mask-inventory\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"mask inventory\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mask-inventory-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"empty-state\",\n    onClick: () => setemptystate(!emptystate),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"empty (\", emptyData.length, \"/208) \"), /*#__PURE__*/React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-hidden\": \"true\",\n    className: \"svg-inline--fa fa-caret-right fa-w-6\",\n    \"data-icon\": \"caret-right\",\n    \"data-prefix\": \"fas\",\n    height: \"1.5em\",\n    viewBox: \"0 0 192 512\",\n    style: {\n      verticalAlign: \"-.125em\",\n      transition: \"transform .2s\",\n      transform: `rotate(${emptystate ? 90 : 0}deg)`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#f56071\",\n    d: \"M0 384.662V127.338c0-17.818 21.543-26.741 34.142-14.142l128.662 128.662c7.81 7.81 7.81 20.474 0 28.284L34.142 398.804C21.543 411.404 0 402.48 0 384.662z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Collapse, {\n    in: emptystate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"empty-collapse-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, emptyData === null || emptyData === void 0 ? void 0 : emptyData.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"empty-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DonutChart, {\n    nonCompleted: \"#dddddd\",\n    txtColor: \"#f56071\",\n    completed: \"#f56071\",\n    value: item === null || item === void 0 ? void 0 : item.availableMasks,\n    totalValue: 208,\n    valuelabel: \"masks available\",\n    size: 80,\n    strokewidth: 7,\n    labelMarginTop: 7,\n    rotateAngle: -90,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"chart-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 19\n    }\n  }, item === null || item === void 0 ? void 0 : item.price)))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"warning-state\",\n    onClick: () => setwarningstate(!warningstate),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"warning (\", warningData.length, \"/208) \"), /*#__PURE__*/React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-hidden\": \"true\",\n    className: \"svg-inline--fa fa-caret-right fa-w-6\",\n    \"data-icon\": \"caret-right\",\n    \"data-prefix\": \"fas\",\n    height: \"1.5em\",\n    viewBox: \"0 0 192 512\",\n    style: {\n      verticalAlign: \"-.125em\",\n      transition: \"transform .2s\",\n      transform: `rotate(${warningstate ? 90 : 0}deg)`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#f5aa60\",\n    d: \"M0 384.662V127.338c0-17.818 21.543-26.741 34.142-14.142l128.662 128.662c7.81 7.81 7.81 20.474 0 28.284L34.142 398.804C21.543 411.404 0 402.48 0 384.662z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Collapse, {\n    in: warningstate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"warning-collapse-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, warningData === null || warningData === void 0 ? void 0 : warningData.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"empty-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DonutChart, {\n    nonCompleted: \"#dddddd\",\n    txtColor: \"#f5aa60\",\n    completed: \"#f5aa60\",\n    value: item === null || item === void 0 ? void 0 : item.availableMasks,\n    totalValue: 208,\n    valuelabel: \"masks available\",\n    size: 80,\n    strokewidth: 7,\n    labelMarginTop: 7,\n    rotateAngle: -90,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"chart-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 19\n    }\n  }, item === null || item === void 0 ? void 0 : item.price)))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filled-state\",\n    onClick: () => setfilledstate(!filledstate),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, \"filled (\", filledData.length, \"/208) \"), /*#__PURE__*/React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-hidden\": \"true\",\n    className: \"svg-inline--fa fa-caret-right fa-w-6\",\n    \"data-icon\": \"caret-right\",\n    \"data-prefix\": \"fas\",\n    height: \"1.5em\",\n    viewBox: \"0 0 192 512\",\n    style: {\n      verticalAlign: \"-.125em\",\n      transition: \"transform .2s\",\n      transform: `rotate(${filledstate ? 90 : 0}deg)`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#85d8ab\",\n    d: \"M0 384.662V127.338c0-17.818 21.543-26.741 34.142-14.142l128.662 128.662c7.81 7.81 7.81 20.474 0 28.284L34.142 398.804C21.543 411.404 0 402.48 0 384.662z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Collapse, {\n    in: filledstate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filled-collapse-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }, filledData === null || filledData === void 0 ? void 0 : filledData.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"empty-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DonutChart, {\n    nonCompleted: \"#dddddd\",\n    txtColor: \"#85d8ab\",\n    completed: \"#85d8ab\",\n    value: item === null || item === void 0 ? void 0 : item.availableMasks,\n    totalValue: 208,\n    valuelabel: \"masks available\",\n    size: 80,\n    strokewidth: 7,\n    labelMarginTop: 7,\n    rotateAngle: -90,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"chart-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 19\n    }\n  }, item === null || item === void 0 ? void 0 : item.price))))))));\n}","map":{"version":3,"sources":["/home/wasif/Documents/Office/mask_vending_machine/src/components/MaskInventory/index.js"],"names":["React","useEffect","useState","API","graphqlOperation","DonutChart","Collapse","MaskInventory","data","emptystate","setemptystate","warningstate","setwarningstate","filledstate","setfilledstate","emptyData","useEmptyData","warningData","useWarningData","filledData","useFilledData","ManagingData","emptyDataTemp","warningDataTemp","filledDataTemp","i","length","availableMasks","split","push","price","id","masqomats","verticalAlign","transition","transform","map","item","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport { DonutChart } from \"../DonutChart/DonutChart\";\nimport { Collapse } from \"react-bootstrap\";\nimport \"./style.css\";\n\nexport default function MaskInventory({ data }) {\n  const [emptystate, setemptystate] = useState(false);\n  const [warningstate, setwarningstate] = useState(false);\n  const [filledstate, setfilledstate] = useState(false);\n  const [emptyData, useEmptyData] = useState([]);\n  const [warningData, useWarningData] = useState([]);\n  const [filledData, useFilledData] = useState([]);\n  const ManagingData = (data) => {\n    const emptyDataTemp = [];\n    const warningDataTemp = [];\n    const filledDataTemp = [];\n    for (let i = 0; i < data?.length; i++) {\n      if (data[i]?.availableMasks.split(\"/\")[0] < 10) {\n        emptyDataTemp.push({\n          price: data[i]?.id,\n          availableMasks: data[i]?.availableMasks.split(\"/\")[0],\n        });\n      } else if (data[i]?.availableMasks.split(\"/\")[0] < 100) {\n        warningDataTemp.push({\n          price: data[i]?.id,\n          availableMasks: data[i]?.availableMasks.split(\"/\")[0],\n        });\n      } else {\n        filledDataTemp.push({\n          price: data[i]?.masqomats?.id,\n          availableMasks: data[i]?.availableMasks.split(\"/\")[0],\n        });\n      }\n    }\n    useEmptyData(emptyDataTemp);\n    useWarningData(warningDataTemp);\n    useFilledData(filledDataTemp);\n  };\n  useEffect(() => {\n    ManagingData(data);\n  }, [data]);\n\n  return (\n    <div className=\"mask-inventory\">\n      <p className=\"heading\">mask inventory</p>\n      <div className=\"mask-inventory-body\">\n        <div className=\"empty-state\" onClick={() => setemptystate(!emptystate)}>\n          <p>empty ({emptyData.length}/208) </p>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            aria-hidden=\"true\"\n            className=\"svg-inline--fa fa-caret-right fa-w-6\"\n            data-icon=\"caret-right\"\n            data-prefix=\"fas\"\n            height=\"1.5em\"\n            viewBox=\"0 0 192 512\"\n            style={{\n              verticalAlign: \"-.125em\",\n              transition: \"transform .2s\",\n              transform: `rotate(${emptystate ? 90 : 0}deg)`,\n            }}\n          >\n            <path\n              fill=\"#f56071\"\n              d=\"M0 384.662V127.338c0-17.818 21.543-26.741 34.142-14.142l128.662 128.662c7.81 7.81 7.81 20.474 0 28.284L34.142 398.804C21.543 411.404 0 402.48 0 384.662z\"\n            ></path>\n          </svg>\n        </div>\n        <Collapse in={emptystate}>\n          <div className=\"empty-collapse-text\">\n            {emptyData?.map((item, index) => (\n              <div key={index} className=\"empty-data\">\n                <>\n                  <DonutChart\n                    nonCompleted=\"#dddddd\"\n                    txtColor=\"#f56071\"\n                    completed=\"#f56071\"\n                    value={item?.availableMasks}\n                    totalValue={208}\n                    valuelabel=\"masks available\"\n                    size={80}\n                    strokewidth={7}\n                    labelMarginTop={7}\n                    rotateAngle={-90}\n                  />\n                  <p className=\"chart-label\">{item?.price}</p>\n                </>\n              </div>\n            ))}\n          </div>\n        </Collapse>\n        <div\n          className=\"warning-state\"\n          onClick={() => setwarningstate(!warningstate)}\n        >\n          <p>warning ({warningData.length}/208) </p>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            aria-hidden=\"true\"\n            className=\"svg-inline--fa fa-caret-right fa-w-6\"\n            data-icon=\"caret-right\"\n            data-prefix=\"fas\"\n            height=\"1.5em\"\n            viewBox=\"0 0 192 512\"\n            style={{\n              verticalAlign: \"-.125em\",\n              transition: \"transform .2s\",\n              transform: `rotate(${warningstate ? 90 : 0}deg)`,\n            }}\n          >\n            <path\n              fill=\"#f5aa60\"\n              d=\"M0 384.662V127.338c0-17.818 21.543-26.741 34.142-14.142l128.662 128.662c7.81 7.81 7.81 20.474 0 28.284L34.142 398.804C21.543 411.404 0 402.48 0 384.662z\"\n            ></path>\n          </svg>\n        </div>\n        <Collapse in={warningstate}>\n          <div className=\"warning-collapse-text\">\n            {warningData?.map((item, index) => (\n              <div key={index} className=\"empty-data\">\n                <>\n                  <DonutChart\n                    nonCompleted=\"#dddddd\"\n                    txtColor=\"#f5aa60\"\n                    completed=\"#f5aa60\"\n                    value={item?.availableMasks}\n                    totalValue={208}\n                    valuelabel=\"masks available\"\n                    size={80}\n                    strokewidth={7}\n                    labelMarginTop={7}\n                    rotateAngle={-90}\n                  />\n                  <p className=\"chart-label\">{item?.price}</p>\n                </>\n              </div>\n            ))}\n          </div>\n        </Collapse>\n        <div\n          className=\"filled-state\"\n          onClick={() => setfilledstate(!filledstate)}\n        >\n          <p>filled ({filledData.length}/208) </p>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            aria-hidden=\"true\"\n            className=\"svg-inline--fa fa-caret-right fa-w-6\"\n            data-icon=\"caret-right\"\n            data-prefix=\"fas\"\n            height=\"1.5em\"\n            viewBox=\"0 0 192 512\"\n            style={{\n              verticalAlign: \"-.125em\",\n              transition: \"transform .2s\",\n              transform: `rotate(${filledstate ? 90 : 0}deg)`,\n            }}\n          >\n            <path\n              fill=\"#85d8ab\"\n              d=\"M0 384.662V127.338c0-17.818 21.543-26.741 34.142-14.142l128.662 128.662c7.81 7.81 7.81 20.474 0 28.284L34.142 398.804C21.543 411.404 0 402.48 0 384.662z\"\n            ></path>\n          </svg>\n        </div>\n        <Collapse in={filledstate}>\n          <div className=\"filled-collapse-text\">\n            {filledData?.map((item, index) => (\n              <div key={index} className=\"empty-data\">\n                <>\n                  <DonutChart\n                    nonCompleted=\"#dddddd\"\n                    txtColor=\"#85d8ab\"\n                    completed=\"#85d8ab\"\n                    value={item?.availableMasks}\n                    totalValue={208}\n                    valuelabel=\"masks available\"\n                    size={80}\n                    strokewidth={7}\n                    labelMarginTop={7}\n                    rotateAngle={-90}\n                  />\n                  <p className=\"chart-label\">{item?.price}</p>\n                </>\n              </div>\n            ))}\n          </div>\n        </Collapse>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}