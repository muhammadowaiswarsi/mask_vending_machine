{"ast":null,"code":"import React from'react';import\"./donut-chart.css\";export var DonutChart=function DonutChart(_ref){var size=_ref.size,rotateAngle=_ref.rotateAngle,labelMarginTop=_ref.labelMarginTop,strokewidth=_ref.strokewidth,value=_ref.value,valuelabel=_ref.valuelabel,totalValue=_ref.totalValue,nonCompleted=_ref.nonCompleted,completed=_ref.completed,txtColor=_ref.txtColor;size=size?size:220;size=window.screen.width<400&&size>200?150:size;labelMarginTop=window.screen.width<400&&labelMarginTop>200?150:labelMarginTop;rotateAngle=rotateAngle?rotateAngle:0;labelMarginTop=labelMarginTop?labelMarginTop:25;strokewidth=strokewidth?strokewidth:25;var halfsize=size*0.5;var radius=halfsize-strokewidth*0.5;var circumference=2*Math.PI*radius;var strokeval=value/totalValue*100*circumference/100;var dashval=strokeval+' '+circumference;var trackstyle={strokeWidth:strokewidth};var indicatorstyle={strokeWidth:strokewidth,strokeDasharray:dashval};var rotateval='rotate('+rotateAngle+\" \"+halfsize+','+halfsize+')';return/*#__PURE__*/React.createElement(\"svg\",{width:size,height:size,className:\"donutchart\"},/*#__PURE__*/React.createElement(\"circle\",{r:radius,cx:halfsize,cy:halfsize,stroke:nonCompleted,transform:rotateval,style:trackstyle,className:\"donutchart-track\"}),/*#__PURE__*/React.createElement(\"circle\",{r:radius,cx:halfsize,cy:halfsize,stroke:completed,transform:rotateval,style:indicatorstyle,className:\"donutchart-indicator\"}),/*#__PURE__*/React.createElement(\"text\",{className:\"donutchart-text\",fill:txtColor,x:halfsize,y:halfsize,style:{textAnchor:'middle'}},/*#__PURE__*/React.createElement(\"tspan\",{className:\"donutchart-text-val\"},value,\"/\",totalValue),/*#__PURE__*/React.createElement(\"tspan\",{className:\"donutchart-text-label\",x:halfsize,y:halfsize+labelMarginTop},valuelabel)));};","map":{"version":3,"sources":["/home/wasif/Documents/Office/mask_vending_machine/src/components/DonutChart/DonutChart.js"],"names":["React","DonutChart","size","rotateAngle","labelMarginTop","strokewidth","value","valuelabel","totalValue","nonCompleted","completed","txtColor","window","screen","width","halfsize","radius","circumference","Math","PI","strokeval","dashval","trackstyle","strokeWidth","indicatorstyle","strokeDasharray","rotateval","textAnchor"],"mappings":"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","sourcesContent":["import React from 'react'\nimport \"./donut-chart.css\"\n\nexport const DonutChart = ({size, rotateAngle, labelMarginTop, strokewidth, value, valuelabel, totalValue, nonCompleted, completed, txtColor}) => {\n      size = size ? size : 220;\n      size = (window.screen.width < 400  && size > 200) ? 150 : size;\n      labelMarginTop = (window.screen.width < 400  && labelMarginTop > 200) ? 150 : labelMarginTop;\n      rotateAngle = rotateAngle ? rotateAngle : 0;\n      labelMarginTop = labelMarginTop ? labelMarginTop : 25\n      strokewidth = strokewidth ? strokewidth : 25;\n      const halfsize = (size * 0.5);\n      const radius = halfsize - (strokewidth * 0.5);\n      const circumference = 2 * Math.PI * radius;\n      const strokeval = ((((value/totalValue)*100) * circumference) / 100);\n      const dashval = (strokeval + ' ' + circumference);\n  \n      const trackstyle = {strokeWidth: strokewidth};\n      const indicatorstyle = {strokeWidth: strokewidth, strokeDasharray: dashval}\n      const rotateval = 'rotate(' + rotateAngle + \" \" + halfsize+','+halfsize+')';\n  \n      return (\n        <svg width={size} height={size} className=\"donutchart\">\n          <circle r={radius} cx={halfsize} cy={halfsize} stroke={nonCompleted} transform={rotateval} style={trackstyle} className=\"donutchart-track\"/>\n          <circle r={radius} cx={halfsize} cy={halfsize} stroke={completed} transform={rotateval} style={indicatorstyle} className=\"donutchart-indicator\"/>\n          <text className=\"donutchart-text\" fill={txtColor} x={halfsize} y={halfsize} style={{textAnchor:'middle'}} >\n            <tspan className=\"donutchart-text-val\">{value}/{totalValue}</tspan>\n            <tspan className=\"donutchart-text-label\" x={halfsize} y={halfsize+labelMarginTop}>{valuelabel}</tspan>\n          </text>\n        </svg>\n      );\n  }\n"]},"metadata":{},"sourceType":"module"}