{"ast":null,"code":"var _jsxFileName = \"/home/wasif/Documents/Office/mask_vending_machine/src/components/MoneyPage/index.js\";\nimport { AmplifySignOut } from \"@aws-amplify/ui-react\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport React, { useEffect, useState } from \"react\";\nimport Loader from \"react-spinners/ClipLoader\";\nimport { listOrders } from \"../../graphql/queries\";\nimport \"./money.css\";\nexport default function MoneyPage({\n  changeMoney,\n  data\n}) {\n  var _listOrder$price, _listOrder$profit;\n\n  const [allChecked, setallChecked] = useState(false);\n  const [listOrder, setListOrder] = useState(false);\n  const [loading, setloading] = useState(false);\n  const [lists, changeLists] = useState([]);\n  const [templists, changeTempLists] = useState([]);\n  const [maskPrice, setMaskPrice] = useState(\"\");\n  const [profitShare, setProfitShare] = useState(\"\");\n  const [id, setId] = useState(\"\");\n\n  const checkAllCheckboxes = () => {\n    if (!allChecked) changeTempLists(lists);else {\n      const temp = [...lists];\n      temp.forEach(item => {\n        item.checked = false;\n      });\n      changeLists(temp);\n      changeTempLists([]);\n    }\n    setallChecked(!allChecked);\n    setMaskPrice(\"\");\n    setProfitShare(\"\");\n    setId(\"\");\n  };\n\n  const GettingApi = () => {\n    API.graphql(graphqlOperation(listOrders)).then(res => {\n      let temp = {\n        profit: 0,\n        price: 0\n      };\n      let temp1 = 0;\n\n      for (let i = 0; i < (templists === null || templists === void 0 ? void 0 : templists.length); i++) {\n        for (let k = 0; k < (res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : (_res$data$listOrders = _res$data.listOrders) === null || _res$data$listOrders === void 0 ? void 0 : (_res$data$listOrders$ = _res$data$listOrders.items) === null || _res$data$listOrders$ === void 0 ? void 0 : _res$data$listOrders$.length); k++) {\n          var _res$data, _res$data$listOrders, _res$data$listOrders$, _res$data2, _res$data2$listOrders, _res$data2$listOrders2, _res$data2$listOrders3, _templists$i, _res$data3, _res$data3$listOrders, _res$data3$listOrders2, _res$data3$listOrders3;\n\n          console.log(res === null || res === void 0 ? void 0 : (_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : (_res$data2$listOrders = _res$data2.listOrders) === null || _res$data2$listOrders === void 0 ? void 0 : (_res$data2$listOrders2 = _res$data2$listOrders.items[k]) === null || _res$data2$listOrders2 === void 0 ? void 0 : (_res$data2$listOrders3 = _res$data2$listOrders2.masqomat) === null || _res$data2$listOrders3 === void 0 ? void 0 : _res$data2$listOrders3.id, (_templists$i = templists[i]) === null || _templists$i === void 0 ? void 0 : _templists$i.masqomatId);\n\n          if (templists[i].masqomatId === (res === null || res === void 0 ? void 0 : (_res$data3 = res.data) === null || _res$data3 === void 0 ? void 0 : (_res$data3$listOrders = _res$data3.listOrders) === null || _res$data3$listOrders === void 0 ? void 0 : (_res$data3$listOrders2 = _res$data3$listOrders.items[k]) === null || _res$data3$listOrders2 === void 0 ? void 0 : (_res$data3$listOrders3 = _res$data3$listOrders2.masqomat) === null || _res$data3$listOrders3 === void 0 ? void 0 : _res$data3$listOrders3.id)) {\n            var _templists$i2, _templists$i3;\n\n            temp.profit += Number((_templists$i2 = templists[i]) === null || _templists$i2 === void 0 ? void 0 : _templists$i2.profitShare);\n            temp.price += Number((_templists$i3 = templists[i]) === null || _templists$i3 === void 0 ? void 0 : _templists$i3.priceNetto);\n            ++temp1;\n          }\n        }\n      }\n\n      temp.total = temp1;\n      temp.profit = Number(temp.profit) / temp1;\n      setListOrder(temp);\n    });\n  };\n\n  useEffect(() => {\n    GettingApi();\n  }, [templists]);\n  useEffect(() => {\n    changeLists(data);\n  }, [data]);\n\n  const updateChecked = i => {\n    if (!allChecked) {\n      if (i || i === 0) {\n        if (lists[i].checked) {\n          setMaskPrice(\"\");\n          setProfitShare(\"\");\n          setId(\"\");\n          changeTempLists([]);\n        } else {\n          if (templists.length === 0) {\n            var _lists$i, _lists$i2;\n\n            setMaskPrice(lists[i].priceNetto);\n            setProfitShare((_lists$i = lists[i]) === null || _lists$i === void 0 ? void 0 : _lists$i.profitShare);\n            setId((_lists$i2 = lists[i]) === null || _lists$i2 === void 0 ? void 0 : _lists$i2.productId);\n          } else {\n            setProfitShare(\"\");\n            setId(\"\");\n            setMaskPrice(\"\");\n          }\n\n          const temp = [...templists];\n          temp.push(lists[i]);\n          changeTempLists(temp);\n        }\n\n        const temp = [...lists];\n        temp[i].checked = !temp[i].checked;\n        changeLists(temp);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"money-page-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-out\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AmplifySignOut, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sales-figure\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"sales-headings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, \"sales figures\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"sales-values\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, new Date().toDateString().split(\" \")[1], \".\", new Date().toDateString().split(\" \")[2])), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"sales-headings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, \"total mask sold\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"sales-values sales-num-values\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, (listOrder === null || listOrder === void 0 ? void 0 : listOrder.total) ? listOrder === null || listOrder === void 0 ? void 0 : listOrder.total : 0)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"sales-headings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, \"total sales\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"sales-values sales-num-values\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, (listOrder === null || listOrder === void 0 ? void 0 : listOrder.price) ? listOrder === null || listOrder === void 0 ? void 0 : (_listOrder$price = listOrder.price) === null || _listOrder$price === void 0 ? void 0 : _listOrder$price.toFixed(2) : 0, \"\\u20AC\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"sales-headings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, \"total profit\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"sales-values sales-num-values\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, (listOrder === null || listOrder === void 0 ? void 0 : listOrder.profit) && (listOrder === null || listOrder === void 0 ? void 0 : listOrder.profit) !== 0 ? listOrder === null || listOrder === void 0 ? void 0 : (_listOrder$profit = listOrder.profit) === null || _listOrder$profit === void 0 ? void 0 : _listOrder$profit.toFixed(2) : 0, \"%\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tenant-option\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"headings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, \"tenant options\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tenant-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"select-all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"round\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: () => checkAllCheckboxes(),\n    type: \"checkbox\",\n    id: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"points\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, \"All\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tenant-bottom-part\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tenant-list-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tenant-list-part\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"tenant-list-headings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"roundPart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 25\n    }\n  }, \"name\")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 25\n    }\n  }, \"profit share\")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 25\n    }\n  }, \"mask price\")))), lists === null || lists === void 0 ? void 0 : lists.map((item, i) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: i,\n    className: \"tenant-lists\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"roundPart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"round\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: () => {\n      updateChecked(i);\n    },\n    checked: allChecked || (item === null || item === void 0 ? void 0 : item.checked),\n    value: allChecked || (item === null || item === void 0 ? void 0 : item.checked),\n    type: \"checkbox\",\n    id: \"checkbox\" + i + 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"checkbox\" + i + 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 27\n    }\n  }))), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 23\n    }\n  }, item === null || item === void 0 ? void 0 : item.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 23\n    }\n  }, item === null || item === void 0 ? void 0 : item.profitShare, \"%\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 23\n    }\n  }, item === null || item === void 0 ? void 0 : item.priceNetto, \"\\u20AC\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tenant-list-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tenant-changing-part\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }\n  }, \"mask price:\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"inputs\",\n    value: maskPrice,\n    onChange: e => setMaskPrice(e.target.value),\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }, \"\\u20AC\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }\n  }, \"profit share:\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"inputs\",\n    value: profitShare,\n    onChange: e => setProfitShare(e.target.value),\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }, \"%\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"set-changes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: async () => {\n      if (id) {\n        setloading(true);\n        await changeMoney(id, maskPrice, profitShare);\n        setloading(false);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Loader, {\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 30\n    }\n  }) : \"set changes\")))))));\n}","map":{"version":3,"sources":["/home/wasif/Documents/Office/mask_vending_machine/src/components/MoneyPage/index.js"],"names":["AmplifySignOut","API","graphqlOperation","React","useEffect","useState","Loader","listOrders","MoneyPage","changeMoney","data","allChecked","setallChecked","listOrder","setListOrder","loading","setloading","lists","changeLists","templists","changeTempLists","maskPrice","setMaskPrice","profitShare","setProfitShare","id","setId","checkAllCheckboxes","temp","forEach","item","checked","GettingApi","graphql","then","res","profit","price","temp1","i","length","k","items","console","log","masqomat","masqomatId","Number","priceNetto","total","updateChecked","productId","push","Date","toDateString","split","toFixed","map","name","e","target","value"],"mappings":"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","sourcesContent":["import { AmplifySignOut } from \"@aws-amplify/ui-react\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport React, { useEffect, useState } from \"react\";\nimport Loader from \"react-spinners/ClipLoader\";\nimport { listOrders } from \"../../graphql/queries\";\nimport \"./money.css\";\n\nexport default function MoneyPage({ changeMoney, data }) {\n  const [allChecked, setallChecked] = useState(false);\n  const [listOrder, setListOrder] = useState(false);\n  const [loading, setloading] = useState(false);\n  const [lists, changeLists] = useState([]);\n  const [templists, changeTempLists] = useState([]);\n  const [maskPrice, setMaskPrice] = useState(\"\");\n  const [profitShare, setProfitShare] = useState(\"\");\n  const [id, setId] = useState(\"\");\n  const checkAllCheckboxes = () => {\n    if (!allChecked) changeTempLists(lists);\n    else {\n      const temp = [...lists];\n      temp.forEach((item) => {\n        item.checked = false;\n      });\n      changeLists(temp);\n      changeTempLists([]);\n    }\n    setallChecked(!allChecked);\n    setMaskPrice(\"\");\n    setProfitShare(\"\");\n    setId(\"\");\n  };\n  const GettingApi = () => {\n    API.graphql(graphqlOperation(listOrders)).then((res) => {\n      let temp = { profit: 0, price: 0 };\n      let temp1 = 0;\n      for (let i = 0; i < templists?.length; i++) {\n        for (let k = 0; k < res?.data?.listOrders?.items?.length; k++) {\n          console.log(\n            res?.data?.listOrders?.items[k]?.masqomat?.id,\n            templists[i]?.masqomatId\n          );\n          if (\n            templists[i].masqomatId ===\n            res?.data?.listOrders?.items[k]?.masqomat?.id\n          ) {\n            temp.profit += Number(templists[i]?.profitShare);\n            temp.price += Number(templists[i]?.priceNetto);\n            ++temp1;\n          }\n        }\n      }\n      temp.total = temp1;\n      temp.profit = Number(temp.profit) / temp1;\n      setListOrder(temp);\n    });\n  };\n  useEffect(() => {\n    GettingApi();\n  }, [templists]);\n  useEffect(() => {\n    changeLists(data);\n  }, [data]);\n  const updateChecked = (i) => {\n    if (!allChecked) {\n      if (i || i === 0) {\n        if (lists[i].checked) {\n          setMaskPrice(\"\");\n          setProfitShare(\"\");\n          setId(\"\");\n          changeTempLists([]);\n        } else {\n          if (templists.length === 0) {\n            setMaskPrice(lists[i].priceNetto);\n            setProfitShare(lists[i]?.profitShare);\n            setId(lists[i]?.productId);\n          } else {\n            setProfitShare(\"\");\n            setId(\"\");\n            setMaskPrice(\"\");\n          }\n          const temp = [...templists];\n          temp.push(lists[i]);\n          changeTempLists(temp);\n        }\n        const temp = [...lists];\n        temp[i].checked = !temp[i].checked;\n        changeLists(temp);\n      }\n    }\n  };\n  return (\n    <div className=\"money-page-container\">\n      <div className=\"sign-out\">\n        <AmplifySignOut />\n      </div>\n      <div className=\"sales-figure\">\n        <div>\n          <p className=\"sales-headings\">sales figures</p>\n          <p className=\"sales-values\">\n            {new Date().toDateString().split(\" \")[1]}.\n            {new Date().toDateString().split(\" \")[2]}\n          </p>\n        </div>\n        <div>\n          <p className=\"sales-headings\">total mask sold</p>\n          <p className=\"sales-values sales-num-values\">\n            {listOrder?.total ? listOrder?.total : 0}\n          </p>\n        </div>\n        <div>\n          <p className=\"sales-headings\">total sales</p>\n          <p className=\"sales-values sales-num-values\">\n            {listOrder?.price ? listOrder?.price?.toFixed(2) : 0}€\n          </p>\n        </div>\n        <div>\n          <p className=\"sales-headings\">total profit</p>\n          <p className=\"sales-values sales-num-values\">\n            {listOrder?.profit && listOrder?.profit !== 0\n              ? listOrder?.profit?.toFixed(2)\n              : 0}\n            %\n          </p>\n        </div>\n      </div>\n      <div className=\"tenant-option\">\n        <p className=\"headings\">tenant options</p>\n        <div className=\"tenant-body\">\n          <div className=\"select-all\">\n            <div className=\"round\">\n              <input\n                onChange={() => checkAllCheckboxes()}\n                type=\"checkbox\"\n                id=\"checkbox\"\n              />\n              <label htmlFor=\"checkbox\"></label>\n            </div>\n            <p className=\"points\">All</p>\n          </div>\n          <div className=\"tenant-bottom-part\">\n            <div className=\"tenant-list-body\">\n              <div className=\"tenant-list-part\">\n                <table width=\"100%\">\n                  <thead>\n                    <tr className=\"tenant-list-headings\">\n                      <td className=\"roundPart\">\n                        <p></p>\n                      </td>\n                      <td>\n                        <p>name</p>\n                      </td>\n                      <td>\n                        <p>profit share</p>\n                      </td>\n                      <td>\n                        <p>mask price</p>\n                      </td>\n                    </tr>\n                  </thead>\n                  {lists?.map((item, i) => (\n                    <tr key={i} className=\"tenant-lists\">\n                      <td className=\"roundPart\">\n                        <div className=\"round\">\n                          <input\n                            onChange={() => {\n                              updateChecked(i);\n                            }}\n                            checked={allChecked || item?.checked}\n                            value={allChecked || item?.checked}\n                            type=\"checkbox\"\n                            id={\"checkbox\" + i + 1}\n                          />\n                          <label htmlFor={\"checkbox\" + i + 1}></label>\n                        </div>\n                      </td>\n                      <td>{item?.name}</td>\n                      <td>{item?.profitShare}%</td>\n                      <td>{item?.priceNetto}€</td>\n                    </tr>\n                  ))}\n                </table>\n              </div>\n              <div className=\"tenant-list-footer\"></div>\n            </div>\n            <div className=\"tenant-changing-part\">\n              <div>\n                <p>mask price:</p>\n                <input\n                  className=\"inputs\"\n                  value={maskPrice}\n                  onChange={(e) => setMaskPrice(e.target.value)}\n                  type=\"text\"\n                />\n                <span>€</span>\n              </div>\n              <div>\n                <p>profit share:</p>\n                <input\n                  className=\"inputs\"\n                  value={profitShare}\n                  onChange={(e) => setProfitShare(e.target.value)}\n                  type=\"text\"\n                />\n                <span>%</span>\n              </div>\n              <div className=\"set-changes\">\n                <button\n                  onClick={async () => {\n                    if (id) {\n                      setloading(true);\n                      await changeMoney(id, maskPrice, profitShare);\n                      setloading(false);\n                    }\n                  }}\n                >\n                  {loading ? <Loader color=\"white\" /> : \"set changes\"}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}