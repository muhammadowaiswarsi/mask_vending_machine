{"ast":null,"code":"var _jsxFileName = \"/home/wasif/Documents/Office/mask_vending_machine/src/components/DonutChart/DonutChart.js\";\nimport React from 'react';\nimport \"./donut-chart.css\";\nexport const DonutChart = ({\n  size,\n  rotateAngle,\n  labelMarginTop,\n  strokewidth,\n  value,\n  valuelabel,\n  totalValue,\n  nonCompleted,\n  completed,\n  txtColor\n}) => {\n  size = size ? size : 220;\n  size = window.screen.width < 400 && size > 200 ? 150 : size;\n  labelMarginTop = window.screen.width < 400 && labelMarginTop > 200 ? 150 : labelMarginTop;\n  rotateAngle = rotateAngle ? rotateAngle : 0;\n  labelMarginTop = labelMarginTop ? labelMarginTop : 25;\n  strokewidth = strokewidth ? strokewidth : 25;\n  const halfsize = size * 0.5;\n  const radius = halfsize - strokewidth * 0.5;\n  const circumference = 2 * Math.PI * radius;\n  const strokeval = value / totalValue * 100 * circumference / 100;\n  const dashval = strokeval + ' ' + circumference;\n  const trackstyle = {\n    strokeWidth: strokewidth\n  };\n  const indicatorstyle = {\n    strokeWidth: strokewidth,\n    strokeDasharray: dashval\n  };\n  const rotateval = 'rotate(' + rotateAngle + \" \" + halfsize + ',' + halfsize + ')';\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    width: size,\n    height: size,\n    className: \"donutchart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    r: radius,\n    cx: halfsize,\n    cy: halfsize,\n    stroke: nonCompleted,\n    transform: rotateval,\n    style: trackstyle,\n    className: \"donutchart-track\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    r: radius,\n    cx: halfsize,\n    cy: halfsize,\n    stroke: completed,\n    transform: rotateval,\n    style: indicatorstyle,\n    className: \"donutchart-indicator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"text\", {\n    className: \"donutchart-text\",\n    fill: txtColor,\n    x: halfsize,\n    y: halfsize,\n    style: {\n      textAnchor: 'middle'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tspan\", {\n    className: \"donutchart-text-val\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, value, \"/\", totalValue), /*#__PURE__*/React.createElement(\"tspan\", {\n    className: \"donutchart-text-label\",\n    x: halfsize,\n    y: halfsize + labelMarginTop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, valuelabel)));\n};","map":{"version":3,"sources":["/home/wasif/Documents/Office/mask_vending_machine/src/components/DonutChart/DonutChart.js"],"names":["React","DonutChart","size","rotateAngle","labelMarginTop","strokewidth","value","valuelabel","totalValue","nonCompleted","completed","txtColor","window","screen","width","halfsize","radius","circumference","Math","PI","strokeval","dashval","trackstyle","strokeWidth","indicatorstyle","strokeDasharray","rotateval","textAnchor"],"mappings":"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","sourcesContent":["import React from 'react'\nimport \"./donut-chart.css\"\n\nexport const DonutChart = ({size, rotateAngle, labelMarginTop, strokewidth, value, valuelabel, totalValue, nonCompleted, completed, txtColor}) => {\n      size = size ? size : 220;\n      size = (window.screen.width < 400  && size > 200) ? 150 : size;\n      labelMarginTop = (window.screen.width < 400  && labelMarginTop > 200) ? 150 : labelMarginTop;\n      rotateAngle = rotateAngle ? rotateAngle : 0;\n      labelMarginTop = labelMarginTop ? labelMarginTop : 25\n      strokewidth = strokewidth ? strokewidth : 25;\n      const halfsize = (size * 0.5);\n      const radius = halfsize - (strokewidth * 0.5);\n      const circumference = 2 * Math.PI * radius;\n      const strokeval = ((((value/totalValue)*100) * circumference) / 100);\n      const dashval = (strokeval + ' ' + circumference);\n  \n      const trackstyle = {strokeWidth: strokewidth};\n      const indicatorstyle = {strokeWidth: strokewidth, strokeDasharray: dashval}\n      const rotateval = 'rotate(' + rotateAngle + \" \" + halfsize+','+halfsize+')';\n  \n      return (\n        <svg width={size} height={size} className=\"donutchart\">\n          <circle r={radius} cx={halfsize} cy={halfsize} stroke={nonCompleted} transform={rotateval} style={trackstyle} className=\"donutchart-track\"/>\n          <circle r={radius} cx={halfsize} cy={halfsize} stroke={completed} transform={rotateval} style={indicatorstyle} className=\"donutchart-indicator\"/>\n          <text className=\"donutchart-text\" fill={txtColor} x={halfsize} y={halfsize} style={{textAnchor:'middle'}} >\n            <tspan className=\"donutchart-text-val\">{value}/{totalValue}</tspan>\n            <tspan className=\"donutchart-text-label\" x={halfsize} y={halfsize+labelMarginTop}>{valuelabel}</tspan>\n          </text>\n        </svg>\n      );\n  }\n"]},"metadata":{},"sourceType":"module"}