{"version":3,"sources":["../node_modules/@aws-amplify/ui-react/node_modules/@aws-amplify/ui-components/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","aws-exports.js","components/Navbar/Index.js","components/DonutChart/DonutChart.js","components/OnlineStatus/index.js","components/MaskInventory/index.js","components/VendingMachines/VendingMachines.js","components/MachinePage/index.js","graphql/queries.js","components/MoneyPage/index.js","graphql/mutation.js","components/Form/form.js","App.js","graphql/subsciption.js","serviceWorker.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","keys","Object","module","exports","awsmobile","Navbar","selectNav","useState","active","setactive","className","onClick","DonutChart","size","rotateAngle","labelMarginTop","strokewidth","value","valuelabel","totalValue","nonCompleted","completed","txtColor","window","screen","width","halfsize","radius","circumference","Math","PI","trackstyle","strokeWidth","indicatorstyle","strokeDasharray","rotateval","height","r","cx","cy","stroke","transform","style","fill","x","y","textAnchor","OnlineStatus","data","filter","items","onlineStatus","length","item","i","key","location","company","display","justifyContent","marginTop","color","MaskInventory","emptystate","setemptystate","warningstate","setwarningstate","filledstate","setfilledstate","emptyData","useEmptyData","warningData","useWarningData","filledData","useFilledData","useEffect","emptyDataTemp","warningDataTemp","filledDataTemp","availableMasks","split","push","price","masqomats","ManagingData","xmlns","aria-hidden","data-icon","data-prefix","viewBox","verticalAlign","transition","d","Collapse","in","index","VendingMachines","ListOrder","monthlySales","MachinePage","vending","onlineList","oflineList","temp","listOrders","MoneyPage","changeMoney","allChecked","setallChecked","listOrder","setListOrder","loading","setloading","lists","changeLists","templists","changeTempLists","maskPrice","setMaskPrice","profitShare","setProfitShare","setId","API","graphql","graphqlOperation","res","profit","temp1","k","console","log","masqomat","masqomatId","Number","priceNetto","total","Date","toDateString","toFixed","onChange","forEach","checked","checkAllCheckboxes","type","htmlFor","productId","updateChecked","target","a","Form","CreateUser","userId","username","setverified","email","setemail","mobNumber","setmobNumber","onSubmit","preventDefault","input","user_id","userName","disabled","placeholder","name","Amplify","configure","awsconfig","withAuthenticator","user","setUser","navselection","setnavselection","setData","setVending","setOnlineList","offlineList","setOfflineList","new1","verified","loader","setloader","APICalling","masqomatEasyId","uniqClientId","Axios","url","method","clientId","result","toLowerCase","getData","listMasqomats","j","easyId","prev","tempData","online","temp2","catch","err","tempdata","products","description","reseller","companyName","stock","getListOrder","Auth","currentAuthenticatedUser","AuthState","subscribe","next","createUserData","prevState","onUpdateProduct","attributes","sub","res1","getMasqomatUser","err1","createMasqomatUser","slot","usernameAlias","hideSignUp","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.344e6732.chunk.js","sourcesContent":["var map = {\n\t\"./amplify-amazon-button_5.entry.js\": [\n\t\t324,\n\t\t12\n\t],\n\t\"./amplify-auth-fields_9.entry.js\": [\n\t\t325,\n\t\t13\n\t],\n\t\"./amplify-authenticator.entry.js\": [\n\t\t326,\n\t\t6\n\t],\n\t\"./amplify-button_3.entry.js\": [\n\t\t327,\n\t\t14\n\t],\n\t\"./amplify-chatbot.entry.js\": [\n\t\t328,\n\t\t5\n\t],\n\t\"./amplify-checkbox.entry.js\": [\n\t\t329,\n\t\t15\n\t],\n\t\"./amplify-confirm-sign-in_7.entry.js\": [\n\t\t330,\n\t\t7\n\t],\n\t\"./amplify-container.entry.js\": [\n\t\t331,\n\t\t16\n\t],\n\t\"./amplify-federated-buttons_2.entry.js\": [\n\t\t332,\n\t\t17\n\t],\n\t\"./amplify-federated-sign-in.entry.js\": [\n\t\t333,\n\t\t18\n\t],\n\t\"./amplify-form-field_4.entry.js\": [\n\t\t334,\n\t\t19\n\t],\n\t\"./amplify-greetings.entry.js\": [\n\t\t335,\n\t\t20\n\t],\n\t\"./amplify-icon-button.entry.js\": [\n\t\t336,\n\t\t21\n\t],\n\t\"./amplify-icon.entry.js\": [\n\t\t337,\n\t\t8\n\t],\n\t\"./amplify-link.entry.js\": [\n\t\t338,\n\t\t22\n\t],\n\t\"./amplify-nav_2.entry.js\": [\n\t\t339,\n\t\t23\n\t],\n\t\"./amplify-photo-picker.entry.js\": [\n\t\t340,\n\t\t24\n\t],\n\t\"./amplify-picker.entry.js\": [\n\t\t341,\n\t\t25\n\t],\n\t\"./amplify-radio-button_2.entry.js\": [\n\t\t342,\n\t\t9\n\t],\n\t\"./amplify-s3-album.entry.js\": [\n\t\t343,\n\t\t0,\n\t\t26\n\t],\n\t\"./amplify-s3-image-picker.entry.js\": [\n\t\t344,\n\t\t0,\n\t\t27\n\t],\n\t\"./amplify-s3-image.entry.js\": [\n\t\t345,\n\t\t0,\n\t\t28\n\t],\n\t\"./amplify-s3-text-picker.entry.js\": [\n\t\t346,\n\t\t0,\n\t\t29\n\t],\n\t\"./amplify-s3-text.entry.js\": [\n\t\t347,\n\t\t0,\n\t\t30\n\t],\n\t\"./amplify-select-mfa-type.entry.js\": [\n\t\t348,\n\t\t31\n\t],\n\t\"./amplify-sign-in-button.entry.js\": [\n\t\t349,\n\t\t10\n\t],\n\t\"./amplify-toast.entry.js\": [\n\t\t350,\n\t\t32\n\t],\n\t\"./amplify-tooltip.entry.js\": [\n\t\t351,\n\t\t33\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 233;\nmodule.exports = webpackAsyncContext;","/* eslint-disable */\n// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"eu-central-1\",\n    \"aws_cognito_region\": \"eu-central-1\",\n    \"aws_user_pools_id\": \"eu-central-1_6RvKmb9iJ\",\n    \"aws_user_pools_web_client_id\": \"4h5jh988agb01se9t8ot3njjml\",\n    \"oauth\": {},\n    \"aws_appsync_graphqlEndpoint\": \"https://q2k7euxrszbf3aya7whkskxv6y.appsync-api.eu-central-1.amazonaws.com/graphql\",\n    \"aws_appsync_region\": \"eu-central-1\",\n    \"aws_appsync_authenticationType\": \"AMAZON_COGNITO_USER_POOLS\",\n    \"aws_cloud_logic_custom\": [\n        {\n            \"name\": \"orderlambda\",\n            \"endpoint\": \"https://7rbmaacwae.execute-api.eu-central-1.amazonaws.com/devenv\",\n            \"region\": \"eu-central-1\"\n        }\n    ],\n    \"aws_appsync_apiKey\": \"da2-47lpnlyuozc6pmdxovktklyfli\",\n    \"aws_appsync_region\": \"eu-central-1\",\n    \"oauth\": {\n        \"domain\": \"devmasquick-devenv.auth.eu-central-1.amazoncognito.com\",\n        \"scope\": [\n            \"phone\",\n            \"email\",\n            \"openid\",\n            \"profile\",\n            \"aws.cognito.signin.user.admin\"\n        ],\n        \"redirectSignIn\": \"http://localhost:8100/\",\n        \"redirectSignOut\": \"http://localhost:8100/\",\n        \"responseType\": \"code\"\n    },\n    \"aws_cognito_identity_pool_id\": \"eu-central-1:e4091bf4-e1bb-404a-a385-517f590c81c5\",\n};\n\nexport default awsmobile;\n","import React, { useState } from \"react\";\nimport \"./navbar.css\";\n\nexport default function Navbar({ selectNav }) {\n  const [active, setactive] = useState(\"machine\");\n  return (\n    <div className=\"navbar\">\n      <div className=\"navbar-upper-part\">\n        <div\n          onClick={() => {\n            setactive(\"machine\");\n            selectNav(\"machine\");\n          }}\n          className=\"machine\"\n        >\n          <div className={active === \"machine\" ? \"active\" : \"\"}>\n            <p className=\"machine-symbol\">M</p>\n          </div>\n          <p className=\"machine-name\">machines</p>\n        </div>\n        <div\n          onClick={() => {\n            setactive(\"money\");\n            selectNav(\"money\");\n          }}\n          className=\"money\"\n        >\n          <div className={active === \"money\" ? \"active\" : \"\"}>\n            <p className=\"money-symbol\">$</p>\n          </div>\n          <p>money</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react'\nimport \"./donut-chart.css\"\n\nexport const DonutChart = ({size, rotateAngle, labelMarginTop, strokewidth, value, valuelabel, totalValue, nonCompleted, completed, txtColor}) => {\n      size = size ? size : 220;\n      size = (window.screen.width < 400  && size > 200) ? 150 : size;\n      labelMarginTop = (window.screen.width < 400  && labelMarginTop > 200) ? 150 : labelMarginTop;\n      rotateAngle = rotateAngle ? rotateAngle : 0;\n      labelMarginTop = labelMarginTop ? labelMarginTop : 25\n      strokewidth = strokewidth ? strokewidth : 25;\n      const halfsize = (size * 0.5);\n      const radius = halfsize - (strokewidth * 0.5);\n      const circumference = 2 * Math.PI * radius;\n      const strokeval = ((((value/totalValue)*100) * circumference) / 100);\n      const dashval = (strokeval + ' ' + circumference);\n  \n      const trackstyle = {strokeWidth: strokewidth};\n      const indicatorstyle = {strokeWidth: strokewidth, strokeDasharray: dashval}\n      const rotateval = 'rotate(' + rotateAngle + \" \" + halfsize+','+halfsize+')';\n  \n      return (\n        <svg width={size} height={size} className=\"donutchart\">\n          <circle r={radius} cx={halfsize} cy={halfsize} stroke={nonCompleted} transform={rotateval} style={trackstyle} className=\"donutchart-track\"/>\n          <circle r={radius} cx={halfsize} cy={halfsize} stroke={completed} transform={rotateval} style={indicatorstyle} className=\"donutchart-indicator\"/>\n          <text className=\"donutchart-text\" fill={txtColor} x={halfsize} y={halfsize} style={{textAnchor:'middle'}} >\n            <tspan className=\"donutchart-text-val\">{value}/{totalValue}</tspan>\n            <tspan className=\"donutchart-text-label\" x={halfsize} y={halfsize+labelMarginTop}>{valuelabel}</tspan>\n          </text>\n        </svg>\n      );\n  }\n","import React, { useState } from \"react\";\nimport { DonutChart } from \"../DonutChart/DonutChart\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport \"./onlinestatus.css\";\n\nexport default function OnlineStatus({ data }) {\n  const [active, setactive] = useState(\"offline\");\n  return (\n    <div className=\"status\">\n      <p className=\"heading\">onlinestatus</p>\n      <div className=\"machine-card-data\">\n        <DonutChart\n          nonCompleted=\"#f56071\"\n          txtColor={\n            data && data?.filter((items) => items?.onlineStatus === \"online\").length\n              ? \"#85d8ab\"\n              : \"#f56071\"\n          }\n          completed=\"#85d8ab\"\n          value={\n            data && data?.filter((items) => items?.onlineStatus === \"online\").length\n          }\n          totalValue={data?.length}\n          valuelabel=\"machines online\"\n        />\n        <div className=\"status-right-body\">\n          <div className=\"status-head-div\">\n            <p\n              onClick={() => setactive(\"offline\")}\n              className={\n                \"offline \" + (active === \"offline\" ? \"active-tab\" : \"\")\n              }\n            >\n              Offline\n            </p>\n            <p\n              onClick={() => setactive(\"online\")}\n              className={\"online \" + (active === \"online\" ? \"active-tab\" : \"\")}\n            >\n              Online\n            </p>\n          </div>\n          <div className={\"status-body \" + active + \"-body\"}>\n            <table>\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>location</th>\n                  <th>company</th>\n                </tr>\n              </thead>\n              <tbody>\n                {active === \"offline\" ? (\n                  data ? (\n                    data\n                      ?.filter((item) => item?.onlineStatus === \"offline\")\n                      .map((item, i) => (\n                        <tr key={i}>\n                          <td>{item.id}</td>\n                          <td>{item.location}</td>\n                          <td>{item.company}</td>\n                        </tr>\n                      ))\n                  ) : (\n                    <div\n                      style={{\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        marginTop: \"3em\",\n                      }}\n                    >\n                      <ClipLoader size={60} color={\"#f56071\"} />\n                    </div>\n                  )\n                ) : data ? (\n                  data\n                    ?.filter((item) => item?.onlineStatus === \"online\")\n                    .map((item, i) => (\n                      <tr key={i}>\n                        <td>{item.id}</td>\n                        <td>{item.location}</td>\n                        <td>{item.company}</td>\n                      </tr>\n                    ))\n                ) : (\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                      marginTop: \"3em\",\n                    }}\n                  >\n                    <ClipLoader size={60} color={\"#85d8ab\"} />\n                  </div>\n                )}\n              </tbody>\n            </table>\n          </div>\n          <div className=\"status-footer\"></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { DonutChart } from \"../DonutChart/DonutChart\";\nimport { Collapse } from \"react-bootstrap\";\nimport \"./style.css\";\n\nexport default function MaskInventory({ data }) {\n  const [emptystate, setemptystate] = useState(false);\n  const [warningstate, setwarningstate] = useState(false);\n  const [filledstate, setfilledstate] = useState(false);\n  const [emptyData, useEmptyData] = useState([]);\n  const [warningData, useWarningData] = useState([]);\n  const [filledData, useFilledData] = useState([]);\n  const ManagingData = (data) => {\n    const emptyDataTemp = [];\n    const warningDataTemp = [];\n    const filledDataTemp = [];\n    for (let i = 0; i < data?.length; i++) {\n      if (data[i]?.availableMasks.split(\"/\")[0] < 10) {\n        emptyDataTemp.push({\n          price: data[i]?.id,\n          availableMasks: data[i]?.availableMasks.split(\"/\")[0],\n        });\n      } else if (data[i]?.availableMasks.split(\"/\")[0] < 100) {\n        warningDataTemp.push({\n          price: data[i]?.id,\n          availableMasks: data[i]?.availableMasks.split(\"/\")[0],\n        });\n      } else {\n        filledDataTemp.push({\n          price: data[i]?.masqomats?.id,\n          availableMasks: data[i]?.availableMasks.split(\"/\")[0],\n        });\n      }\n    }\n    useEmptyData(emptyDataTemp);\n    useWarningData(warningDataTemp);\n    useFilledData(filledDataTemp);\n  };\n  useEffect(() => {\n    ManagingData(data);\n  }, [data]);\n\n  return (\n    <div className=\"mask-inventory\">\n      <p className=\"heading\">mask inventory</p>\n      <div className=\"mask-inventory-body\">\n        <div className=\"empty-state\" onClick={() => setemptystate(!emptystate)}>\n          <p>empty ({emptyData.length}/208) </p>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            aria-hidden=\"true\"\n            className=\"svg-inline--fa fa-caret-right fa-w-6\"\n            data-icon=\"caret-right\"\n            data-prefix=\"fas\"\n            height=\"1.5em\"\n            viewBox=\"0 0 192 512\"\n            style={{\n              verticalAlign: \"-.125em\",\n              transition: \"transform .2s\",\n              transform: `rotate(${emptystate ? 90 : 0}deg)`,\n            }}\n          >\n            <path\n              fill=\"#f56071\"\n              d=\"M0 384.662V127.338c0-17.818 21.543-26.741 34.142-14.142l128.662 128.662c7.81 7.81 7.81 20.474 0 28.284L34.142 398.804C21.543 411.404 0 402.48 0 384.662z\"\n            ></path>\n          </svg>\n        </div>\n        <Collapse in={emptystate}>\n          <div className=\"empty-collapse-text\">\n            {emptyData?.map((item, index) => (\n              <div key={index} className=\"empty-data\">\n                <>\n                  <DonutChart\n                    nonCompleted=\"#dddddd\"\n                    txtColor=\"#f56071\"\n                    completed=\"#f56071\"\n                    value={item?.availableMasks}\n                    totalValue={208}\n                    valuelabel=\"masks available\"\n                    size={80}\n                    strokewidth={7}\n                    labelMarginTop={7}\n                    rotateAngle={-90}\n                  />\n                  <p className=\"chart-label\">{item?.price}</p>\n                </>\n              </div>\n            ))}\n          </div>\n        </Collapse>\n        <div\n          className=\"warning-state\"\n          onClick={() => setwarningstate(!warningstate)}\n        >\n          <p>warning ({warningData.length}/208) </p>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            aria-hidden=\"true\"\n            className=\"svg-inline--fa fa-caret-right fa-w-6\"\n            data-icon=\"caret-right\"\n            data-prefix=\"fas\"\n            height=\"1.5em\"\n            viewBox=\"0 0 192 512\"\n            style={{\n              verticalAlign: \"-.125em\",\n              transition: \"transform .2s\",\n              transform: `rotate(${warningstate ? 90 : 0}deg)`,\n            }}\n          >\n            <path\n              fill=\"#f5aa60\"\n              d=\"M0 384.662V127.338c0-17.818 21.543-26.741 34.142-14.142l128.662 128.662c7.81 7.81 7.81 20.474 0 28.284L34.142 398.804C21.543 411.404 0 402.48 0 384.662z\"\n            ></path>\n          </svg>\n        </div>\n        <Collapse in={warningstate}>\n          <div className=\"warning-collapse-text\">\n            {warningData?.map((item, index) => (\n              <div key={index} className=\"empty-data\">\n                <>\n                  <DonutChart\n                    nonCompleted=\"#dddddd\"\n                    txtColor=\"#f5aa60\"\n                    completed=\"#f5aa60\"\n                    value={item?.availableMasks}\n                    totalValue={208}\n                    valuelabel=\"masks available\"\n                    size={80}\n                    strokewidth={7}\n                    labelMarginTop={7}\n                    rotateAngle={-90}\n                  />\n                  <p className=\"chart-label\">{item?.price}</p>\n                </>\n              </div>\n            ))}\n          </div>\n        </Collapse>\n        <div\n          className=\"filled-state\"\n          onClick={() => setfilledstate(!filledstate)}\n        >\n          <p>filled ({filledData.length}/208) </p>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            aria-hidden=\"true\"\n            className=\"svg-inline--fa fa-caret-right fa-w-6\"\n            data-icon=\"caret-right\"\n            data-prefix=\"fas\"\n            height=\"1.5em\"\n            viewBox=\"0 0 192 512\"\n            style={{\n              verticalAlign: \"-.125em\",\n              transition: \"transform .2s\",\n              transform: `rotate(${filledstate ? 90 : 0}deg)`,\n            }}\n          >\n            <path\n              fill=\"#85d8ab\"\n              d=\"M0 384.662V127.338c0-17.818 21.543-26.741 34.142-14.142l128.662 128.662c7.81 7.81 7.81 20.474 0 28.284L34.142 398.804C21.543 411.404 0 402.48 0 384.662z\"\n            ></path>\n          </svg>\n        </div>\n        <Collapse in={filledstate}>\n          <div className=\"filled-collapse-text\">\n            {filledData?.map((item, index) => (\n              <div key={index} className=\"empty-data\">\n                <>\n                  <DonutChart\n                    nonCompleted=\"#dddddd\"\n                    txtColor=\"#85d8ab\"\n                    completed=\"#85d8ab\"\n                    value={item?.availableMasks}\n                    totalValue={208}\n                    valuelabel=\"masks available\"\n                    size={80}\n                    strokewidth={7}\n                    labelMarginTop={7}\n                    rotateAngle={-90}\n                  />\n                  <p className=\"chart-label\">{item?.price}</p>\n                </>\n              </div>\n            ))}\n          </div>\n        </Collapse>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./style.css\";\nimport { ClipLoader } from \"react-spinners\";\n\nexport default function VendingMachines({ ListOrder, data }) {\n\n  return (\n    <div className=\"vending-machines\">\n      <p className=\"heading\">vending machines</p>\n      <div className=\"vending-table\">\n        <table>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>location</th>\n              <th>company</th>\n              <th>onlinestatus</th>\n              <th>availabe masks</th>\n              <th>monthly sales</th>\n            </tr>\n          </thead>\n          { data ? (\n            <>\n              <tbody>\n                {data?.map((item, i) => (\n                  <tr key={i}>\n                    <td>{item.id}</td>\n                    <td>{item.location}</td>\n                    <td>{item.company}</td>\n                    <td\n                      className={\n                        item?.onlineStatus === \"offline\"\n                          ? \"vending-status-offline\"\n                          : \"\"\n                      }\n                    >\n                      {item.onlineStatus}\n                    </td>\n                    <td\n                      className={\n                        item.availableMasks.split(\"/\")[0] < 10\n                          ? \"low-vending\"\n                          : item.availableMasks.split(\"/\")[0] < 100\n                          ? \"moderate-vending\"\n                          : \"\"\n                      }\n                    >\n                      {item.availableMasks}\n                    </td>\n                    <td>{item?.monthlySales ? item?.monthlySales : 0}€</td>\n                  </tr>\n                ))}\n              </tbody>\n            </>\n          ) : (\n            <></>\n          )}\n        </table>\n        {!data && (\n          <div\n            style={{\n              width: \"100%\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              marginTop: \"1em\",\n            }}\n          >\n            <ClipLoader size={60} color={\"#85d8ab\"} />\n          </div>\n        )}\n      </div>\n      <div className=\"vending-footer\"></div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { AmplifySignOut } from \"@aws-amplify/ui-react\";\nimport \"./machinepage.css\";\nimport OnlineStatus from \"../OnlineStatus\";\nimport MaskInventory from \"../MaskInventory\";\nimport VendingMachines from \"../VendingMachines/VendingMachines\";\n\nconst MachinePage = ({ ListOrder, vending, onlineList, oflineList, temp }) => {\n  return (\n    <div className=\"machine-page-container\">\n      <div className=\"sign-out\">\n        <AmplifySignOut />\n      </div>\n      <div className=\"first-row\">\n        <OnlineStatus data={vending} />\n        <MaskInventory data={vending} />\n      </div>\n      <div className=\"second-row\">\n        <VendingMachines ListOrder={ListOrder} data={vending} />\n      </div>\n    </div>\n  );\n};\n\nexport default MachinePage;\n","export const getResellers = `\nquery listMasqomats($id: ID!) {\n  listMasqomats(filter: {id: {eq: $id}}) {\n    items {\n      id\n      easyId\n      description\n      position {\n        latitude\n        longitude\n      }\n      products {\n        items {\n          id\n          stock\n          profitShare\n          priceNetto\n          name\n        }\n      }\n      reseller {\n        companyName\n      }\n    }\n  }\n}\n`;\nexport const getMasqomatUser = `\nquery getMasqomatUser($id: ID!) {\n  getMasqomatUser(user_id: $id) {\n    email\n    masqomats\n    userName\n    user_id\n  }\n}`;\nexport const listOrders = `\nquery listorders{\n  listOrders{\n    items{\n      id\n      sumPrice\n        masqomat{\n        id\n        products{\n          items{\n            priceNetto\n            profitShare\n          }\n        }\n        reseller{\n          name\n        }\n        }\n    }\n  }\n}`;\n","import { AmplifySignOut } from \"@aws-amplify/ui-react\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport React, { useEffect, useState } from \"react\";\nimport Loader from \"react-spinners/ClipLoader\";\nimport { listOrders } from \"../../graphql/queries\";\nimport \"./money.css\";\n\nexport default function MoneyPage({ changeMoney, data }) {\n  const [allChecked, setallChecked] = useState(false);\n  const [listOrder, setListOrder] = useState(false);\n  const [loading, setloading] = useState(false);\n  const [lists, changeLists] = useState([]);\n  const [templists, changeTempLists] = useState([]);\n  const [maskPrice, setMaskPrice] = useState(\"\");\n  const [profitShare, setProfitShare] = useState(\"\");\n  const [id, setId] = useState(\"\");\n  const checkAllCheckboxes = () => {\n    if (!allChecked) changeTempLists(lists);\n    else {\n      const temp = [...lists];\n      temp.forEach((item) => {\n        item.checked = false;\n      });\n      changeLists(temp);\n      changeTempLists([]);\n    }\n    setallChecked(!allChecked);\n    setMaskPrice(\"\");\n    setProfitShare(\"\");\n    setId(\"\");\n  };\n  const GettingApi = () => {\n    API.graphql(graphqlOperation(listOrders)).then((res) => {\n      let temp = { profit: 0, price: 0 };\n      let temp1 = 0;\n      for (let i = 0; i < templists?.length; i++) {\n        for (let k = 0; k < res?.data?.listOrders?.items?.length; k++) {\n          console.log(\n            res?.data?.listOrders?.items[k]?.masqomat?.id,\n            templists[i]?.masqomatId\n          );\n          if (\n            templists[i].masqomatId ===\n            res?.data?.listOrders?.items[k]?.masqomat?.id\n          ) {\n            temp.profit += Number(templists[i]?.profitShare);\n            temp.price += Number(templists[i]?.priceNetto);\n            ++temp1;\n          }\n        }\n      }\n      temp.total = temp1;\n      temp.profit = Number(temp.profit) / temp1;\n      setListOrder(temp);\n    });\n  };\n  useEffect(() => {\n    GettingApi();\n  }, [templists]);\n  useEffect(() => {\n    changeLists(data);\n  }, [data]);\n  const updateChecked = (i) => {\n    if (!allChecked) {\n      if (i || i === 0) {\n        if (lists[i].checked) {\n          setMaskPrice(\"\");\n          setProfitShare(\"\");\n          setId(\"\");\n          changeTempLists([]);\n        } else {\n          if (templists.length === 0) {\n            setMaskPrice(lists[i].priceNetto);\n            setProfitShare(lists[i]?.profitShare);\n            setId(lists[i]?.productId);\n          } else {\n            setProfitShare(\"\");\n            setId(\"\");\n            setMaskPrice(\"\");\n          }\n          const temp = [...templists];\n          temp.push(lists[i]);\n          changeTempLists(temp);\n        }\n        const temp = [...lists];\n        temp[i].checked = !temp[i].checked;\n        changeLists(temp);\n      }\n    }\n  };\n  return (\n    <div className=\"money-page-container\">\n      <div className=\"sign-out\">\n        <AmplifySignOut />\n      </div>\n      <div className=\"sales-figure\">\n        <div>\n          <p className=\"sales-headings\">sales figures</p>\n          <p className=\"sales-values\">\n            {new Date().toDateString().split(\" \")[1]}.\n            {new Date().toDateString().split(\" \")[2]}\n          </p>\n        </div>\n        <div>\n          <p className=\"sales-headings\">total mask sold</p>\n          <p className=\"sales-values sales-num-values\">\n            {listOrder?.total ? listOrder?.total : 0}\n          </p>\n        </div>\n        <div>\n          <p className=\"sales-headings\">total sales</p>\n          <p className=\"sales-values sales-num-values\">\n            {listOrder?.price ? listOrder?.price?.toFixed(2) : 0}€\n          </p>\n        </div>\n        <div>\n          <p className=\"sales-headings\">total profit</p>\n          <p className=\"sales-values sales-num-values\">\n            {listOrder?.profit && listOrder?.profit !== 0\n              ? listOrder?.profit?.toFixed(2)\n              : 0}\n            %\n          </p>\n        </div>\n      </div>\n      <div className=\"tenant-option\">\n        <p className=\"headings\">tenant options</p>\n        <div className=\"tenant-body\">\n          <div className=\"select-all\">\n            <div className=\"round\">\n              <input\n                onChange={() => checkAllCheckboxes()}\n                type=\"checkbox\"\n                id=\"checkbox\"\n              />\n              <label htmlFor=\"checkbox\"></label>\n            </div>\n            <p className=\"points\">All</p>\n          </div>\n          <div className=\"tenant-bottom-part\">\n            <div className=\"tenant-list-body\">\n              <div className=\"tenant-list-part\">\n                <table width=\"100%\">\n                  <thead>\n                    <tr className=\"tenant-list-headings\">\n                      <td className=\"roundPart\">\n                        <p></p>\n                      </td>\n                      <td>\n                        <p>name</p>\n                      </td>\n                      <td>\n                        <p>profit share</p>\n                      </td>\n                      <td>\n                        <p>mask price</p>\n                      </td>\n                    </tr>\n                  </thead>\n                  {lists?.map((item, i) => (\n                    <tr key={i} className=\"tenant-lists\">\n                      <td className=\"roundPart\">\n                        <div className=\"round\">\n                          <input\n                            onChange={() => {\n                              updateChecked(i);\n                            }}\n                            checked={allChecked || item?.checked}\n                            value={allChecked || item?.checked}\n                            type=\"checkbox\"\n                            id={\"checkbox\" + i + 1}\n                          />\n                          <label htmlFor={\"checkbox\" + i + 1}></label>\n                        </div>\n                      </td>\n                      <td>{item?.location}</td>\n                      <td>{item?.profitShare}%</td>\n                      <td>{item?.priceNetto}€</td>\n                    </tr>\n                  ))}\n                </table>\n              </div>\n              <div className=\"tenant-list-footer\"></div>\n            </div>\n            <div className=\"tenant-changing-part\">\n              <div>\n                <p>mask price:</p>\n                <input\n                  className=\"inputs\"\n                  value={maskPrice}\n                  onChange={(e) => setMaskPrice(e.target.value)}\n                  type=\"text\"\n                />\n                <span>€</span>\n              </div>\n              <div>\n                <p>profit share:</p>\n                <input\n                  className=\"inputs\"\n                  value={profitShare}\n                  onChange={(e) => setProfitShare(e.target.value)}\n                  type=\"text\"\n                />\n                <span>%</span>\n              </div>\n              <div className=\"set-changes\">\n                <button\n                  onClick={async () => {\n                    if (id) {\n                      setloading(true);\n                      await changeMoney(id, maskPrice, profitShare);\n                      setloading(false);\n                    }\n                  }}\n                >\n                  {loading ? <Loader color=\"white\" /> : \"set changes\"}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","export const UpdateOrders = `\n  mutation updateProduct(\n      $input: UpdateProductInput!\n  ) {\n    updateProduct(input: $input) {\n        id\n        priceNetto\n        name\n        taxes\n        profitShare\n        masqomat {\n          id\n          easyId\n          description\n          position{\n            latitude\n            longitude\n          }\n            products{\n            items{\n              stock\n              profitShare\n              priceNetto\n              name\n            }\n          }\n          reseller{\n            companyName\n          }\n        }\n\n    }\n  }\n`;\n\nexport const createUser = `\n  mutation createMasqomatUser(\n      $input: CreateMasqomatUser!\n  ){\n    createMasqomatUser(input: $input){\n      user_id\n      email\n      userName\n    }\n  }`;\n","import React, { useState } from \"react\";\nimport \"./form.css\";\nconst Form = ({ CreateUser, userId, username, setverified }) => {\n  const [email, setemail] = useState(\"\");\n  const [mobNumber, setmobNumber] = useState(\"\");\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const input = {\n      user_id: userId,\n      userName: username,\n      email: email,\n      masqomats: [],\n    };\n    if (mobNumber) input[\"phoneNumber\"] = mobNumber;\n\n    CreateUser(input);\n  };\n  return (\n    <div className=\"form-main-Div\">\n      <div className=\"form-div\">\n        <p className=\"form-main-heading\">Create Account</p>\n        <form onSubmit={onSubmit} className=\"form\">\n          <div className=\"lines\">\n            <label className=\"label\" htmlFor=\"first_name\">\n              Username\n            </label>\n            <input\n              className=\"input\"\n              disabled\n              value={username}\n              placeholder=\"First Name\"\n              name=\"first_name\"\n              type=\"text\"\n            />\n          </div>\n          <div className=\"lines\">\n            <label className=\"label\" htmlFor=\"email\">\n              Email\n            </label>\n            <input\n              className=\"input\"\n              value={email}\n              onChange={(e) => setemail(e.target.value)}\n              placeholder=\"Email\"\n              name=\"email\"\n              type=\"email\"\n            />\n          </div>\n          <div className=\"lines\">\n            <label className=\"label\" htmlFor=\"mobile_number\">\n              Mobile Number\n            </label>\n            <input\n              className=\"input\"\n              value={mobNumber}\n              onChange={(e) => {\n                if (mobNumber === \"\") setmobNumber(`+${e.target.value}`);\n                else setmobNumber(e.target.value);\n              }}\n              placeholder=\"Mobile Number\"\n              name=\"mobile_number\"\n              type=\"text\"\n            />\n          </div>\n          <div className=\"lines\">\n            <input className=\"submit\" value=\"Submit\" type=\"submit\" />\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Form;\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Amplify, { Auth, API, graphqlOperation } from \"aws-amplify\";\nimport {\n  AmplifyAuthenticator,\n  AmplifySignIn,\n  withAuthenticator,\n} from \"@aws-amplify/ui-react\";\nimport { AuthState } from \"@aws-amplify/ui-components\";\nimport awsconfig from \"./aws-exports\";\nimport Navbar from \"./components/Navbar/Index\";\nimport MachinePage from \"./components/MachinePage/index.js\";\nimport MoneyPage from \"./components/MoneyPage\";\nimport { getMasqomatUser, getResellers, listOrders } from \"./graphql/queries\";\nimport { createUser, UpdateOrders } from \"./graphql/mutation\";\nimport { onUpdateProduct } from \"./graphql/subsciption\";\nimport Form from \"./components/Form/form\";\nimport Loader from \"react-spinners/ClipLoader\";\nimport Axios from \"axios\";\n\nAmplify.configure(awsconfig);\n\nconst AuthStateApp = () => {\n  const [user, setUser] = useState();\n  const [navselection, setnavselection] = useState(\"machine\");\n  const [data, setData] = useState(false);\n  const [vending, setVending] = useState(false);\n  const [ListOrder] = useState(false);\n  const [onlineList, setOnlineList] = useState(false);\n  const [offlineList, setOfflineList] = useState(false);\n  const [new1, setnew] = useState(false);\n  const [verified, setverified] = useState(\"loading\");\n  const [loader, setloader] = useState(false);\n\n  const selectNav = (data) => {\n    setnavselection(data);\n  };\n\n  const APICalling = async (masqomatEasyId, masqomatId) => {\n    try {\n      const uniqClientId = masqomatId;\n      const result = await Axios({\n        url: \"https://cors-anywhere.herokuapp.com/https://arcane-plains-65295.herokuapp.com/status\",\n        method: \"POST\",\n        data: {\n          masqomatEasyId: masqomatEasyId,\n          clientId: uniqClientId,\n        },\n      });\n      if (result?.data?.toLowerCase() === \"online\") {\n        return true;\n      } else {\n        //NOT ONLINE\n        return false;\n      }\n    } catch (err) {\n      return false;\n      //NOT ONLINE\n    }\n  };\n  // useEffect(() => {\n  //   if (verified) APICalling();\n  // }, [user, verified]);\n\n  const getData = async (id) => {\n    setloader(true);\n    API.graphql(graphqlOperation(getResellers, { id }))\n      .then((res) => {\n        let temp = res?.data?.listMasqomats?.items;\n        for (let j = 0; j < temp.length; j++) {\n          APICalling(temp[j]?.easyId, temp[j]?.id).then((res) => {\n            console.log(res, \"status\")\n            setData((prev) => {\n              let tempData = prev ? [...prev] : [];\n              temp[j].online = res;\n              if (res) {\n                let temp1 = onlineList ? [...onlineList] : [];\n                temp1.push(temp);\n                setOnlineList(temp1);\n              } else {\n                let temp2 = offlineList ? [...offlineList] : [];\n                temp2.push(temp);\n                setOfflineList(temp2);\n              }\n              tempData.push(...temp);\n              if (j === temp.length - 1) {\n                // setnew(Date.now());\n                return tempData;\n              }\n            });\n          });\n        }\n        if (res?.data?.listMasqomats?.items.length === 0) {\n          setData([]);\n          setloader(false);\n        }\n      })\n      .catch((err) => {\n        setloader(false);\n        setData(false);\n      });\n  };\n\n  useEffect(() => {\n    if (data && data?.length > 0) {\n      const tempdata = [];\n      for (let i = 0; i < data?.length; i++) {\n        for (let k = 0; k < data[i]?.products?.items.length; k++) {\n          tempdata.push({\n            id: data[i]?.easyId,\n            masqomatId: data[i]?.id,\n            location: data[i]?.description,\n            company: data[i]?.reseller?.companyName,\n            onlineStatus: data[i]?.online ? \"online\" : \"offline\",\n            availableMasks: `${data[i]?.products?.items[k]?.stock}/208`,\n            priceNetto: `${data[i]?.products?.items[k]?.priceNetto}`,\n            profitShare: `${data[i]?.products?.items[k]?.profitShare}`,\n            productId: `${data[i]?.products?.items[k]?.id}`,\n            name: `${data[i]?.products?.items[k]?.name}`,\n          });\n        }\n      }\n      setloader(false);\n      setVending(tempdata);\n      getListOrder()\n    }\n  }, [data, new1]);\n\n  const getListOrder = () => {\n    API.graphql(graphqlOperation(listOrders)).then((res) => {\n      setVending((prev) => {\n        let temp = prev ? [...prev] : [];\n        for (let i = 0; i < temp?.length; i++) {\n          temp[i].monthlySales = res?.data?.listOrders?.items.filter(\n            (item) => temp[i]?.masqomatId === item?.masqomat?.id\n          ).length;\n        }\n        return temp;\n      });\n    });\n  };\n\n  // useEffect(() => {\n  //   getListOrder();\n  // }, [new1, vending]);\n\n  useEffect(() => {\n    Auth.currentAuthenticatedUser()\n      .then((res) => {\n        setUser(res);\n      })\n      .catch((err) => {\n        setUser(false);\n      });\n  }, [AuthState]);\n\n  const changeMoney = async (id, priceNetto, profitShare) => {\n    await API.graphql(\n      graphqlOperation(UpdateOrders, { input: { id, priceNetto, profitShare } })\n    );\n  };\n\n  useEffect(() => {\n    let onUpdate = API.graphql(graphqlOperation(onUpdateProduct)).subscribe({\n      next: (createUserData) => {\n        setVending((prevState) => {\n          let temp = [...prevState];\n          for (let i = 0; i < prevState.length; i++) {\n            if (\n              temp[i]?.masqomatId ===\n              createUserData?.value?.data?.onUpdateProduct?.masqomat?.id\n            ) {\n              temp[i].priceNetto =\n                createUserData?.value?.data?.onUpdateProduct?.priceNetto;\n              temp[i].profitShare =\n                createUserData?.value?.data?.onUpdateProduct?.profitShare;\n              return temp;\n            }\n          }\n        });\n      },\n    });\n  }, []);\n\n  const CreateUserMethod = (input) => {\n    setloader(true);\n    API.graphql(graphqlOperation(createUser, { input: input }))\n\n      .then((res1) => {\n        setverified(res1?.data?.createMasqomatUser);\n        setloader(false);\n      })\n      .catch((err1) => {\n        setloader(false);\n      });\n  };\n\n  useEffect(() => {\n    if (user) {\n      setloader(true);\n      API.graphql(\n        graphqlOperation(getMasqomatUser, { id: user?.attributes?.sub })\n      )\n        .then((res1) => {\n          setverified(res1?.data?.getMasqomatUser);\n          setloader(false);\n          for (\n            let i = 0;\n            i < res1?.data?.getMasqomatUser?.masqomats?.length;\n            i++\n          ) {\n            getData(res1?.data?.getMasqomatUser?.masqomats[i]);\n          }\n        })\n        .catch((err1) => {\n          setloader(false);\n        });\n    }\n  }, [user]);\n\n  if (loader)\n    return (\n      <div className=\"loader\">\n        <Loader />\n      </div>\n    );\n  if (user?.attributes?.sub) {\n    if (verified !== \"loading\" && verified)\n      return (\n        <div className=\"App\">\n          <div className=\"container\">\n            <Navbar selectNav={selectNav} />\n            {navselection === \"machine\" ? (\n              <MachinePage\n                vending={vending}\n                onlineList={onlineList}\n                oflineList={offlineList}\n                ListOrder={ListOrder}\n              />\n            ) : (\n              <MoneyPage changeMoney={changeMoney} data={vending} />\n            )}\n          </div>\n        </div>\n      );\n    else\n      return (\n        <Form\n          CreateUser={CreateUserMethod}\n          setverified={setverified}\n          userId={user?.attributes?.sub}\n          username={user?.username}\n        />\n      );\n  } else\n    return (\n      <div className=\"authentication-page\">\n        <AmplifyAuthenticator>\n          <AmplifySignIn slot=\"sign-in\" usernameAlias=\"email\" hideSignUp>\n            <div slot=\"secondary-footer-content\"></div>\n          </AmplifySignIn>\n        </AmplifyAuthenticator>\n      </div>\n    );\n};\n\nexport default withAuthenticator(AuthStateApp);\n","export const onUpdateProduct = `\nsubscription Product{\n  onUpdateProduct{\n        id\n        priceNetto\n        description\n        name\n        taxes\n        profitShare\n        stock\n        masqomat{\n          id\n          easyId\n          description\n          position{\n            latitude\n            longitude\n          }\n            products{\n            items{\n              stock\n            }\n          }\n          reseller{\n            companyName\n          }\n        }\n    }\n  }`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}